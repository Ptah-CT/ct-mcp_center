NODE_ENV=production

# Postgres connection details
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=metamcp_user
POSTGRES_PASSWORD=m3t4mcp
POSTGRES_DB=metamcp_db

# Database configuration (composed from above vars)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# Application URL configuration
# This is the public URL where your application will be accessible
APP_URL=http://localhost:23456
NEXT_PUBLIC_APP_URL=http://localhost:23456

# CORS configuration for tRPC endpoints
# Accepts a comma or whitespace separated list of allowed origins
# TRPC_ALLOWED_ORIGINS=http://app.example.com https://admin.example.com
# Optionally point to a file containing a JSON array or newline separated origins
# TRPC_ALLOWED_ORIGINS_FILE=./config/trpc-allowed-origins.txt

# Auth configuration
BETTER_AUTH_SECRET=your-super-secret-key-change-this-in-production
# AUTH_SESSION_BASE_URL overrides the URL used by the frontend middleware
# when validating sessions. Set this if the app cannot reach APP_URL
# directly (for example, inside Docker networking).
# AUTH_SESSION_BASE_URL=http://127.0.0.1:32009

# OIDC Provider Configuration (Optional)
# Uncomment and configure these variables to enable OpenID Connect authentication
# callback url is ${APP_URL}/api/auth/oauth2/callback/oidc
# Required for OIDC:
# OIDC_CLIENT_ID=your-oidc-client-id
# OIDC_CLIENT_SECRET=your-oidc-client-secret
# OIDC_DISCOVERY_URL=https://your-oidc-provider.com/.well-known/openid-configuration
# OIDC_AUTHORIZATION_URL=https://your-oidc-provider.com/auth

# Optional OIDC Configuration:
# OIDC_PROVIDER_ID=oidc
# OIDC_SCOPES=openid email profile
# OIDC_PKCE=true

# Docker networking fix
TRANSFORM_LOCALHOST_TO_DOCKER_INTERNAL=true

# MCP Proxy Configuration
STDIO_COOLDOWN_DURATION=10000
